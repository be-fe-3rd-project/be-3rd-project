plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'


//     MySQL JDBC Driver
//    implementation 'com.mysql:mysql-connector-j:8.3.0'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MariaDB JDBC Driver
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20230227'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // devtools 재실행 할 필요없이 코드 수정하면 바로 반영됨
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // JAXB for Java 11+
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'


}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar'){
    mainClass = 'com.example.be3rdproject.Be3rdProjectApplication'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

compileJava {
    options.compilerArgs += ['-parameters']
    sourceCompatibility = 17 // 또는 필요한 자바 버전
    targetCompatibility = 17 // 또는 필요한 자바 버전
}